---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: nodeops.operator.kairos.io
spec:
  group: operator.kairos.io
  names:
    kind: NodeOp
    listKind: NodeOpList
    plural: nodeops
    singular: nodeop
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NodeOp is the Schema for the nodeops API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NodeOpSpec defines the desired state of NodeOp.
            properties:
              command:
                description: |-
                  Command is the command to run on the target nodes.
                  This will be executed in a container with the node's root filesystem mounted.
                items:
                  type: string
                type: array
              cordon:
                default: false
                description: |-
                  Cordon specifies whether to cordon the node before running the operation.
                  When true, the node will be marked as unschedulable before the operation starts
                  and will be uncordoned after the operation completes successfully.
                type: boolean
              drainOptions:
                description: |-
                  DrainOptions specifies the options for draining the node before running the operation.
                  When enabled, pods will be evicted from the node before the operation starts.
                  This requires the Cordon field to be true.
                properties:
                  deleteEmptyDirData:
                    default: false
                    description: |-
                      DeleteEmptyDirData specifies whether to delete local data in emptyDir volumes.
                      When true, data in emptyDir volumes will be deleted during the drain operation.
                    type: boolean
                  enabled:
                    default: false
                    description: |-
                      Enabled specifies whether to drain the node.
                      When true, pods will be evicted from the node before the operation starts.
                    type: boolean
                  force:
                    default: false
                    description: |-
                      Force specifies whether to force the drain operation.
                      When true, pods that do not have a controller will be evicted.
                    type: boolean
                  gracePeriodSeconds:
                    description: |-
                      GracePeriodSeconds is the time in seconds given to each pod to terminate gracefully.
                      If negative, the default value specified in the pod will be used.
                    format: int32
                    type: integer
                  ignoreDaemonSets:
                    default: true
                    description: |-
                      IgnoreDaemonSets specifies whether to ignore DaemonSet-managed pods.
                      When true, DaemonSet-managed pods will be ignored during the drain operation.
                    type: boolean
                  timeoutSeconds:
                    description: |-
                      TimeoutSeconds is the length of time to wait before giving up on the drain operation.
                      If not specified, a default timeout will be used.
                    format: int32
                    type: integer
                type: object
              hostMountPath:
                default: /host
                description: |-
                  HostMountPath is the path where the node's root filesystem will be mounted.
                  Defaults to "/host"
                type: string
              image:
                default: busybox:latest
                description: |-
                  Image is the container image to use for running the command.
                  Defaults to "busybox:latest"
                type: string
              targetNodes:
                description: |-
                  TargetNodes is a list of node names to run the operation on.
                  If empty, the operation will run on all nodes.
                items:
                  type: string
                type: array
            required:
            - command
            type: object
          status:
            description: NodeOpStatus defines the observed state of NodeOp.
            properties:
              lastUpdated:
                description: LastUpdated is the timestamp of the last status update.
                format: date-time
                type: string
              nodeStatuses:
                additionalProperties:
                  description: NodeStatus represents the status of the operation on
                    a specific node.
                  properties:
                    jobName:
                      description: JobName is the name of the Job created for this
                        node.
                      type: string
                    lastUpdated:
                      description: LastUpdated is the timestamp of the last status
                        update for this node.
                      format: date-time
                      type: string
                    message:
                      description: Message contains any additional information about
                        the operation status.
                      type: string
                    phase:
                      description: |-
                        Phase represents the current phase of the operation on this node.
                        Can be "Pending", "Running", "Completed", or "Failed"
                      type: string
                  required:
                  - phase
                  type: object
                description: NodeStatuses contains the status of the operation for
                  each target node.
                type: object
              phase:
                description: |-
                  Phase represents the current phase of the operation.
                  Can be "Pending", "Running", "Completed", or "Failed"
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
