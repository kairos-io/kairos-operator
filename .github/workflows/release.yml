name: Release

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
    secrets:
      QUAY_USERNAME:
        required: true
      QUAY_PASSWORD:
        required: true
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        type: string

env:
  REGISTRY: quay.io
  OPERATOR_IMAGE_NAME: kairos/operator
  NODE_LABELER_IMAGE_NAME: kairos/operator-node-labeler

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.version }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

  build-operator:
    needs: setup
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    runs-on: ${{ matrix.platform == 'linux/amd64' && 'ubuntu-latest' || 'ubuntu-24.04-arm' }}
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build and push operator image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.OPERATOR_IMAGE_NAME }}:${{ inputs.version }}-${{ matrix.platform == 'linux/amd64' && 'amd64' || 'arm64' }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.OPERATOR_IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.OPERATOR_IMAGE_NAME }}:buildcache,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          provenance: false
          sbom: false

  build-node-labeler:
    needs: setup
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    runs-on: ${{ matrix.platform == 'linux/amd64' && 'ubuntu-latest' || 'ubuntu-24.04-arm' }}
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build and push node-labeler image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.node-labeler
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.NODE_LABELER_IMAGE_NAME }}:${{ inputs.version }}-${{ matrix.platform == 'linux/amd64' && 'amd64' || 'arm64' }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.NODE_LABELER_IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.NODE_LABELER_IMAGE_NAME }}:buildcache,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          provenance: false
          sbom: false

  combine-manifests:
    needs: [build-operator, build-node-labeler]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Create and push operator manifest
        run: |
          docker manifest create ${{ env.REGISTRY }}/${{ env.OPERATOR_IMAGE_NAME }}:${{ inputs.version }} \
            ${{ env.REGISTRY }}/${{ env.OPERATOR_IMAGE_NAME }}:${{ inputs.version }}-amd64 \
            ${{ env.REGISTRY }}/${{ env.OPERATOR_IMAGE_NAME }}:${{ inputs.version }}-arm64
          docker manifest annotate ${{ env.REGISTRY }}/${{ env.OPERATOR_IMAGE_NAME }}:${{ inputs.version }} ${{ env.REGISTRY }}/${{ env.OPERATOR_IMAGE_NAME }}:${{ inputs.version }}-amd64 --os linux --arch amd64
          docker manifest annotate ${{ env.REGISTRY }}/${{ env.OPERATOR_IMAGE_NAME }}:${{ inputs.version }} ${{ env.REGISTRY }}/${{ env.OPERATOR_IMAGE_NAME }}:${{ inputs.version }}-arm64 --os linux --arch arm64
          docker manifest push ${{ env.REGISTRY }}/${{ env.OPERATOR_IMAGE_NAME }}:${{ inputs.version }}

      - name: Create and push node-labeler manifest
        run: |
          docker manifest create ${{ env.REGISTRY }}/${{ env.NODE_LABELER_IMAGE_NAME }}:${{ inputs.version }} \
            ${{ env.REGISTRY }}/${{ env.NODE_LABELER_IMAGE_NAME }}:${{ inputs.version }}-amd64 \
            ${{ env.REGISTRY }}/${{ env.NODE_LABELER_IMAGE_NAME }}:${{ inputs.version }}-arm64
          docker manifest annotate ${{ env.REGISTRY }}/${{ env.NODE_LABELER_IMAGE_NAME }}:${{ inputs.version }} ${{ env.REGISTRY }}/${{ env.NODE_LABELER_IMAGE_NAME }}:${{ inputs.version }}-amd64 --os linux --arch amd64
          docker manifest annotate ${{ env.REGISTRY }}/${{ env.NODE_LABELER_IMAGE_NAME }}:${{ inputs.version }} ${{ env.REGISTRY }}/${{ env.NODE_LABELER_IMAGE_NAME }}:${{ inputs.version }}-arm64 --os linux --arch arm64
          docker manifest push ${{ env.REGISTRY }}/${{ env.NODE_LABELER_IMAGE_NAME }}:${{ inputs.version }}

  update-kustomization:
    needs: combine-manifests
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Install GitHub CLI
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

      - name: Create version bump branch
        run: |
          git checkout -b "chore/bump-version-${{ inputs.version }}"

      - name: Update version in kustomization files
        run: |
          # Update operator image version
          sed -i "s|value: quay.io/kairos/operator:v[^[:space:]]*|value: quay.io/kairos/operator:${{ inputs.version }}|g" config/default/kustomization.yaml
          # Update node-labeler image version
          sed -i "s|value: quay.io/kairos/operator-node-labeler:v[^[:space:]]*|value: quay.io/kairos/operator-node-labeler:${{ inputs.version }}|g" config/default/kustomization.yaml

      - name: Commit and push changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git add config/default/kustomization.yaml
          git commit -m "chore: bump version to ${{ inputs.version }}"
          git push origin "chore/bump-version-${{ inputs.version }}"

      - name: Create Pull Request
        run: |
          gh pr create \
            --title "chore: bump version to ${{ inputs.version }}" \
            --body "This PR updates the operator and node-labeler image versions to ${{ inputs.version }}" \
            --base main \
            --head "chore/bump-version-${{ inputs.version }}" \
            --label "version bump"